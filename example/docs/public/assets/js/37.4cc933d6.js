(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{409:function(n,r,e){n.exports=e.p+"assets/img/1.a61bfc02.jpg"},463:function(n,r,e){"use strict";e.r(r);var a=e(3),t=Object(a.a)({},(function(){var n=this,r=n.$createElement,a=n._self._c||r;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("p",[n._v("    在dubbo的使用中我们通常使用zookeeper作为注册中心。在这里spring cloud使用Eureka，\n用一个标准的spring boot项目就可以快捷的搭建服务注册中心。Spring Cloud Eureka 是对Netflix公司的Eureka的二次封装。这里总结搭建过程。"),a("br"),n._v("\n       * 1、"),a("strong",[n._v("引入pom")]),a("br")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("          <dependency>\n              <groupId>org.springframework.cloud</groupId>\n              <artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>\n          </dependency>\n")])])]),a("p",[n._v("       * 2、"),a("strong",[n._v("指明EurekaApplication入口类位置")]),a("br")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("              <build>\n                  <plugins>\n                      <plugin>\n                          <groupId>org.springframework.boot</groupId>\n                          <artifactId>spring-boot-maven-plugin</artifactId>\n                          <configuration>\n                              <mainClass>com.gwssi.spring.cloud.eureka.EurekaApplication</mainClass>\n                          </configuration>\n                      </plugin>\n                  </plugins>\n              </build>\n")])])]),a("p",[n._v("       * 3、"),a("strong",[n._v("入口类增加@EnableEurekaServer注解")]),a("br")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("          @SpringBootApplication\n          @EnableEurekaServer\n          public class EurekaApplication {\n              public static void main(String[] args) {\n                  SpringApplication.run(EurekaApplication.class , args);\n              }\n          }\n")])])]),a("p",[n._v("       * 4、"),a("strong",[n._v("application.yml")]),a("br")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("          spring:\n            application:\n              name: spring-cloud-eureka\n          \n          server:\n            port: 8009\n          \n          eureka:\n            instance:                   #定义Eureka实例\n              hostname: 127.0.0.1 #Eureka实例所在的主机名\n          \n            #eureka默认情况下,把自己当做客户端来注册自己,所以我们要禁用它 这里是服务端\n              client:\n                register-with-eureka: false #表示是否将自己注册到Eureka Server上，默认为true\n                fetch-registry: false       #表示是否从Eureka Server上获取注册信息，默认为true\n                service-url:\n                  defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/\n")])])]),a("p",[n._v("       * 5、"),a("strong",[n._v("启动")]),a("br"),a("br"),n._v(" "),a("img",{attrs:{src:e(409),alt:"1"}})]),n._v(" "),a("p",[n._v("     本人授权"),a("a",{attrs:{href:"http://rightknights.com",target:"_blank",rel:"noopener noreferrer"}},[n._v("维权骑士"),a("OutboundLink")],1),n._v("对我发布文章的版权行为进行追究与维权。未经本人许可，不可擅自转载或用于其他商业用途。")])])}),[],!1,null,null,null);r.default=t.exports}}]);