(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{403:function(e,t,n){e.exports=n.p+"assets/img/19.3146ee28.jpg"},461:function(e,t,n){"use strict";n.r(t);var r=n(3),o=Object(r.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("p",[e._v("    zuul Filter 提供过滤器功能"),r("br")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[e._v('                  package com.gwssi.spring.cloud.zuul.filter;\n                  \n                  import com.netflix.zuul.ZuulFilter;\n                  import com.netflix.zuul.context.RequestContext;\n                  import com.netflix.zuul.exception.ZuulException;\n                  import org.hibernate.validator.internal.util.StringHelper;\n                  import org.springframework.stereotype.Component;\n                  \n                  import javax.servlet.http.HttpServletRequest;\n                  import javax.servlet.http.HttpServletResponse;\n                  import javax.servlet.http.HttpServletResponseWrapper;\n                  import java.io.IOException;\n                  \n                  /**\n                   * Created with IntelliJ IDEA\n                   *\n                   * @version 1.0.0\n                   * @author: ZIHAO FU\n                   * @create: 2020/4/22 10:07\n                   * @description:\n                   */\n                  @Component\n                  public class AccessFilter extends ZuulFilter {\n                  \n                      //路由类型 pre调用前 routing调用中 post调用后 error错误\n                      @Override\n                      public String filterType() {\n                          return "pre";\n                      }\n                  \n                      //过滤顺序\n                      @Override\n                      public int filterOrder() {\n                          return 0;\n                      }\n                  \n                      @Override\n                      public boolean shouldFilter() {\n                          return true;\n                      }\n                  \n                      @Override\n                      public Object run() throws ZuulException {\n                          RequestContext ctx = RequestContext.getCurrentContext();\n                          HttpServletRequest request = ctx.getRequest();\n                          String token = request.getParameter("token");\n                          if(token == null){\n                              ctx.setSendZuulResponse(false);\n                              ctx.setResponseStatusCode(401);\n                              try {\n                                  HttpServletResponse response = ctx.getResponse();\n                                  response.setContentType("text/html;charset=utf-8");\n                                  response.getWriter().write("非法请求");\n                              } catch (IOException e) {\n                                  e.printStackTrace();\n                              }\n                          }\n                          return null;\n                      }\n                  }\n')])])]),r("p",[r("img",{attrs:{src:n(403),alt:"19"}})]),e._v(" "),r("p",[e._v("     本人授权"),r("a",{attrs:{href:"http://rightknights.com",target:"_blank",rel:"noopener noreferrer"}},[e._v("维权骑士"),r("OutboundLink")],1),e._v("对我发布文章的版权行为进行追究与维权。未经本人许可，不可擅自转载或用于其他商业用途。")])])}),[],!1,null,null,null);t.default=o.exports}}]);