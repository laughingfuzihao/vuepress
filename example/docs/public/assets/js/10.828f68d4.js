(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{364:function(e,r,o){e.exports=o.p+"assets/img/1.8477d50b.jpg"},365:function(e,r,o){e.exports=o.p+"assets/img/2.5297b816.png"},366:function(e,r,o){e.exports=o.p+"assets/img/3.941940d1.jpg"},367:function(e,r,o){e.exports=o.p+"assets/img/4.7083a400.png"},368:function(e,r,o){e.exports=o.p+"assets/img/5.7ebac81f.png"},369:function(e,r,o){e.exports=o.p+"assets/img/6.d4581cdf.jpg"},449:function(e,r,o){"use strict";o.r(r);var n=o(3),t=Object(n.a)({},(function(){var e=this,r=e.$createElement,n=e._self._c||r;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("ul",[n("li",[n("p",[n("strong",[e._v("1、分布式系统")]),n("br"),e._v("\n    比起普通的集群模式，采用微服务分布式系统，使系统之间的耦合度大大降低，并且可以独立开发、部署、测试。\n由于分布式系统可能有很多独立的子系统组成，业务量增强以后，子系统通信关系复杂，这时就需要引入RPC框架"),n("br")])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("2、RPC框架")]),n("br"),e._v("\n    简单介绍RPC（Remote Procedure Call），大部分RPC框架都使用TCP协议。\n比如微服务A需要调用微服务B的一个类的一个方法。A服务与B服务需要先建立一个Socket传输。原理基于"),n("strong",[e._v("序列化和反序列化")]),e._v("。\nB服务将Java对象序列化为二进制格式，传给A服务端，A服务端接收到之后，再反序列化为Java对象,服务A就可以调用这个Java对象了。\n比起Restful的http模式，RPC是面向过程的，直接用二进制格式进行传输。")])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("3、dubbo简介")]),n("br"),e._v("\n    官方文档："),n("a",{attrs:{href:"http://dubbo.apache.org/zh-cn/",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://dubbo.apache.org/zh-cn/"),n("OutboundLink")],1),n("br")])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("4、注册中心搭建zookeeper")]),n("br"),e._v("\n    Zookeeper 是 Apacahe Hadoop 的子项目，这里作为 Dubbo 服务的注册中心"),n("a",{attrs:{href:"http://zookeeper.apache.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://zookeeper.apache.org/"),n("OutboundLink")],1),n("br"),e._v("\n    zookeeper-3.4.14下载地址："),n("br"),e._v(" "),n("a",{attrs:{href:"http://mirror.bit.edu.cn/apache/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://mirror.bit.edu.cn/apache/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz"),n("OutboundLink")],1),n("br"),e._v("\n    解压"),n("br"),e._v("\n    更改配置文件，win下新建dataDir目录并配置更改，并将配置文件更改为zoo.cfg"),n("br"),e._v(" "),n("img",{attrs:{src:o(364),alt:"1"}}),e._v("\n    运行zkServer.cmd"),n("br"),e._v(" "),n("img",{attrs:{src:o(365),alt:"1"}}),e._v("\n    打开客户端zkCli.cmd，简单的几条查看命令"),n("br"),e._v(" "),n("img",{attrs:{src:o(366),alt:"1"}})])]),e._v(" "),n("li",[n("p",[n("strong",[e._v("5、监控中心-管理控制台")]),n("br"),e._v("\nc"),n("a",{attrs:{href:"https://github.com/apache/dubbo-admin",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/apache/dubbo-admin"),n("OutboundLink")],1),n("br"),e._v("\n    官方给出的控制台是spring boot + vue.js的项目形式"),n("br"),e._v("\n    dubbo-admin-server/src/main/resources/application.properties中指定注册中心地址"),n("br"),e._v(" "),n("img",{attrs:{src:o(367),alt:"1"}})])])]),e._v(" "),n("p",[e._v("    部署完成后，可以访问 http://localhost:8080/swagger-ui.html 来查看所有的restful api"),n("br"),e._v("\n    账号密码都是root"),n("br"),e._v(" "),n("img",{attrs:{src:o(368),alt:"1"}})]),e._v(" "),n("p",[e._v("    老版本 用springboot jar包dubbo-admin-0.0.1-SNAPSHOT.jar"),n("br"),n("br"),e._v(" "),n("img",{attrs:{src:o(369),alt:"1"}})]),e._v(" "),n("ul",[n("li",[n("strong",[e._v("6、Dubbo项目构建")]),n("br")])]),e._v(" "),n("p",[n("strong",[e._v("将provider注册到注册中心，consumer去注册中心订阅provider")]),n("br")]),e._v(" "),n("p",[e._v("    6.1、在provider引入dubbo和zookeeper"),n("br")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v("         \x3c!--dubbo依赖--\x3e\n         <dependency>\n             <groupId>com.alibaba</groupId>\n             <artifactId>dubbo</artifactId>\n             <version>2.6.2</version>\n         </dependency>\n         \x3c!--zookeeper客户端--\x3e\n         <dependency>\n             <groupId>org.apache.curator</groupId>\n             <artifactId>curator-framework</artifactId>\n             <version>2.12.0</version>\n         </dependency>\n")])])]),n("p",[e._v("    6.2、用 Spring 配置声明暴露服务"),n("br")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v('         <?xml version="1.0" encoding="UTF-8"?>\n         <beans xmlns="http://www.springframework.org/schema/beans"\n                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n                xmlns:dubbo="http://dubbo.apache.org/schema/dubbo"\n                xsi:schemaLocation="http://www.springframework.org/schema/beans        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd        http://dubbo.apache.org/schema/dubbo        http://dubbo.apache.org/schema/dubbo/dubbo.xsd">\n         \n             \x3c!-- 当前应用名  --\x3e\n             <dubbo:application name="servicce"  />\n             \x3c!-- 注册中心位置 这里用之前的zookeeper--\x3e\n             <dubbo:registry address="zookeeper://127.0.0.1:2181" />\n             \x3c!-- 用dubbo协议在20880端口暴露服务 --\x3e\n             <dubbo:protocol name="dubbo" port="20880" />\n             \x3c!-- 声明需要暴露的服务接口 ref指向实现--\x3e\n             <dubbo:service interface="gwssi.service.UserService" ref="UserServiceImpl" />\n             \x3c!-- 和本地bean一样实现服务 --\x3e\n             <bean id="UserServiceImpl" class="com.gwssi.service.impl.UserServiceImpl" />\n         </beans>\n')])])]),n("p",[e._v("    6.3、启动"),n("br")]),e._v(" "),n("p",[e._v("     本人授权"),n("a",{attrs:{href:"http://rightknights.com",target:"_blank",rel:"noopener noreferrer"}},[e._v("维权骑士"),n("OutboundLink")],1),e._v("对我发布文章的版权行为进行追究与维权。未经本人许可，不可擅自转载或用于其他商业用途。")])])}),[],!1,null,null,null);r.default=t.exports}}]);